<!-- -*- mode: XML -*- -->
<launch>

    ################ set up laser data ################
    <include file="$(find velodyne)/launch/velodyne.launch"/>

    ################ start ugvdriver ################
    <include file="$(find ugv_navigation)/launch/ugvdriver.launch"/>

    ################ publish an example base_link -> laser transform ################
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.1 0 0 -1.28 0 0 /base_link /velodyne 100" />

    ################ draw path ################
    <node pkg="ugv_navigation" type="path_node" name="path_node" output="screen">
	<param name="odom_frame" value="odom"/>
        <param name="use_odom" value="true"/>
    </node>

    ################ map server ################
    <node pkg="map_server" name="map_server" type="map_server" args="$(find velodyne)/maps/gmapping-003.yaml"/>

    ################ start amcl ################
    <include file="$(find robot_simulation)/launch/amcl.launch" />

    ################ start move_base ################
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	<param name="controller_frequency" value="10.0"/>
	<param name="controller_patiente" value="15.0"/>
	<rosparam file="$(find velodyne)/params/global_navigation/costmap_common_params.yaml" command="load" ns="global_costmap" />
	<rosparam file="$(find velodyne)/params/global_navigation/costmap_common_params.yaml" command="load" ns="local_costmap" />
	<rosparam file="$(find velodyne)/params/global_navigation/local_costmap_params.yaml" command="load" />
	<rosparam file="$(find velodyne)/params/global_navigation/global_costmap_params.yaml" command="load" />
	<rosparam file="$(find velodyne)/params/global_navigation/base_local_planner_params.yaml" command="load" />
    </node>

    ################ start rviz ################
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find velodyne)/rviz/global_navigation.rviz"/>

</launch>
